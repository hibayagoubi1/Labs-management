pipeline {
  agent {
    docker {
      image 'mcr.microsoft.com/dotnet/core/sdk:3.1' // Utilisation d'une image Docker compatible avec Windows
      args '--user root' // Argument pour exécuter le conteneur avec des privilèges appropriés
    }
  }
  stages {
    stage('Checkout') {
            steps {
               
            git credentialsId: 'github', url: 'https://github.com/hibayagoubi1/Labs-management.git', branch: 'main'

            }
        }   
   stage('Build and Test') {
      steps {
               bat 'cd LabsManagement-Registry && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://localhost:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat 'cd identity-service && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "hibayaagoubi/registry-service:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          bat 'cd LabsManagement-Registry && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }
  }
}
